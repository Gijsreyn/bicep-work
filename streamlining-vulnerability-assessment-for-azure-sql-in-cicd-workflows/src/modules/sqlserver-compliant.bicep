
@description('The Azure SQL Server name.')
param sqlServerName string 
@description('The resource group location to deploy Azure SQL Server.')
param location string = resourceGroup().location
@description('The Azure SQL administrator login.')
param administratorLogin string 
@description('The Azure SQL administrator password.')
@secure()
param administratorLoginPassword string
@description('The virtual network rule(s) to add.')
param virtualNetworkFirewallRule array = [
  {
    startIpAddress: '<yourIpAddress>'
    endIpAddress: '<yourIpAddress>'
    name: 'MyClient'
  }
]
@description('The Azure SQL database name.')
param sqlDatabaseName string = 'AdventureWorksLT'
@description('The Azure SQL database SKU name.')
param skuName string = 'Standard'
@description('The Azure SQL database SKU tier.')
param skuTier string = 'Standard'
@description('The Azure SQL database SKU capacity.')
param skuCapacity int = 10
@description('The collation of the database.')
param collation string = 'SQL_Latin1_General_CP1_CI_AS'
@description('Collation of the metadata catalog.')
param catalogCollation string = 'SQL_Latin1_General_CP1_CI_AS'

module deployment_azure_sqlserver_compliant '../resources/resource-sqlserver.bicep' = {
  name: sqlServerName
  params: {
    location: location
    administratorLogin: administratorLogin
    administratorLoginPassword: administratorLoginPassword
    sqlServerName: sqlServerName
    virtualNetworkFirewallRule: virtualNetworkFirewallRule
  }
}

module deployment_azure_sqldatabase '../resources/resource-sqldatabase.bicep' = {
  name: sqlDatabaseName 
  params: {
    location: location
    sqlDatabaseName: sqlDatabaseName
    sqlServerName: sqlServerName
    skuName: skuName
    skuTier: skuTier
    skuCapacity: skuCapacity
    collation: collation
    catalogCollation: catalogCollation
  }
  dependsOn: [
    deployment_azure_sqlserver_compliant
  ]
}
